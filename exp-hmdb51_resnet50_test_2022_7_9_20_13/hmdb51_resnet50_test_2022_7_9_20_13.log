
Theme:hmdb51_resnet50_test

Date:2022/7/9/20:13:22

Time used:2:13:48.217639

workplace:D:\PythonCode\Pytorch-VideoUnderstand-master\tools

folder information:
+--------------------------+-------------------+-------------------+------------+
|    number of samples     |    train number   |    valid number   |  percent   |
+--------------------------+-------------------+-------------------+------------+
|           6749           |        6074       |        675        |    0.9     |
+--------------------------+-------------------+-------------------+------------+

classes:
+------------+-----------+-------+------+------+-------+--------------+------+------------+---------+-------+-----+------------+---------+-----------+------+-----------+-----+-----+------+------+-----------+------+-------+------+------+--------+-------+------+--------+-----------+------------+-----+-------------+------------+-----------+-----------+-----+-------+-------+-------+------------+-------+----------------+-------+----------------+------+-------+------+------+------+
| brush_hair | cartwheel | catch | chew | clap | climb | climb_stairs | dive | draw_sword | dribble | drink | eat | fall_floor | fencing | flic_flac | golf | handstand | hit | hug | jump | kick | kick_ball | kiss | laugh | pick | pour | pullup | punch | push | pushup | ride_bike | ride_horse | run | shake_hands | shoot_ball | shoot_bow | shoot_gun | sit | situp | smile | smoke | somersault | stand | swing_baseball | sword | sword_exercise | talk | throw | turn | walk | wave |
+------------+-----------+-------+------+------+-------+--------------+------+------------+---------+-------+-----+------------+---------+-----------+------+-----------+-----+-----+------+------+-----------+------+-------+------+------+--------+-------+------+--------+-----------+------------+-----+-------------+------------+-----------+-----------+-----+-------+-------+-------+------------+-------+----------------+-------+----------------+------+-------+------+------+------+
|     0      |     1     |   2   |  3   |  4   |   5   |      6       |  7   |     8      |    9    |   10  |  11 |     12     |    13   |     14    |  15  |     16    |  17 |  18 |  19  |  20  |     21    |  22  |   23  |  24  |  25  |   26   |   27  |  28  |   29   |     30    |     31     |  32 |      33     |     34     |     35    |     36    |  37 |   38  |   39  |   40  |     41     |   42  |       43       |   44  |       45       |  46  |   47  |  48  |  49  |  50  |
+------------+-----------+-------+------+------+-------+--------------+------+------------+---------+-------+-----+------------+---------+-----------+------+-----------+-----+-----+------+------+-----------+------+-------+------+------+--------+-------+------+--------+-----------+------------+-----+-------------+------------+-----------+-----------+-----+-------+-------+-------+------------+-------+----------------+-------+----------------+------+-------+------+------+------+

training device:
+--------------------+-------------------------+---------------------------------+
|   number of gpu    |    applied gpu index    |         applied gpu name        |
+--------------------+-------------------------+---------------------------------+
|         1          |            0            |     NVIDIA GeForce RTX 2060     |
+--------------------+-------------------------+---------------------------------+

training basic configuration:
+----------------------+------------+------------+-----------------+-------+---------------+-------------------------------------------------------+
|        theme         |   resize   | batch size | frame per video | epoch | learning rate |                    directory of log                   |
+----------------------+------------+------------+-----------------+-------+---------------+-------------------------------------------------------+
| hmdb51_resnet50_test | (224, 224) |     16     |        16       |   25  |     0.001     | D:\PythonCode\Pytorch-VideoUnderstand-master\work_dir |
+----------------------+------------+------------+-----------------+-------+---------------+-------------------------------------------------------+

Optimizer:
Adam (
Parameter Group 0
    amsgrad: False
    betas: (0.9, 0.999)
    eps: 1e-08
    lr: 0.001
    weight_decay: 0
)

Model:
ResNet(
  (conv1): Conv3d(3, 64, kernel_size=(3, 7, 7), stride=(1, 2, 2), padding=(1, 3, 3), bias=False)
  (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
  (relu): ReLU(inplace=True)
  (maxpool): MaxPool3d(kernel_size=3, stride=2, padding=1, dilation=1, ceil_mode=False)
  (layer1): Sequential(
    (0): BasicBlock(
      (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
    (1): BasicBlock(
      (conv1): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(64, 64, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(64, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer2): Sequential(
    (0): BasicBlock(
      (conv1): Conv3d(64, 128, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv3d(64, 128, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(128, 128, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(128, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer3): Sequential(
    (0): BasicBlock(
      (conv1): Conv3d(128, 256, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv3d(128, 256, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(256, 256, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(256, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (layer4): Sequential(
    (0): BasicBlock(
      (conv1): Conv3d(256, 512, kernel_size=(3, 3, 3), stride=(2, 2, 2), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (downsample): Sequential(
        (0): Conv3d(256, 512, kernel_size=(1, 1, 1), stride=(2, 2, 2), bias=False)
        (1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      )
    )
    (1): BasicBlock(
      (conv1): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn1): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
      (relu): ReLU(inplace=True)
      (conv2): Conv3d(512, 512, kernel_size=(3, 3, 3), stride=(1, 1, 1), padding=(1, 1, 1), bias=False)
      (bn2): BatchNorm3d(512, eps=1e-05, momentum=0.1, affine=True, track_running_stats=True)
    )
  )
  (avgpool): AdaptiveAvgPool3d(output_size=(1, 1, 1))
  (fc): Linear(in_features=512, out_features=51, bias=True)
)
,
    